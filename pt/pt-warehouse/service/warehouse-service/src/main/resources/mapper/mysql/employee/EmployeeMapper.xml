<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.warehouse.warehouse.dao.employee.EmployeeMapper">

    <resultMap type="com.warehouse.warehouse.pojo.po.employee.Employee" id="EmployeeMap">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="employeeName" column="employee_name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="telephone" column="telephone" jdbcType="VARCHAR"/>
        <result property="addr" column="addr" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
        <result property="isMerried" column="is_merried" jdbcType="INTEGER"/>
        <result property="inTime" column="in_time" jdbcType="TIMESTAMP"/>
        <result property="department" column="department" jdbcType="VARCHAR"/>
        <result property="leaderId" column="leader_id" jdbcType="VARCHAR"/>
        <result property="nation" column="nation" jdbcType="VARCHAR"/>
        <result property="companyId" column="company_id" jdbcType="VARCHAR"/>
    </resultMap>
    
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, employee_name, password, telephone, addr, status, sex, birthday, is_merried, in_time, department, leader_id, nation,company_id
    </sql>

    <!--查询单个-->
    <select id="describeById" parameterType="java.lang.String" resultMap="EmployeeMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <!--查询指定行数据-->
    <select id="describeAllByLimit" resultMap="EmployeeMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="describeAll" parameterType="com.warehouse.warehouse.pojo.po.employee.Employee" resultMap="EmployeeMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        <where>
            <if test="id != null and id != ''">
                and id = #{id,jdbcType=VARCHAR}
            </if>
            <if test="employeeName != null and employeeName != ''">
                and employee_name = #{employeeName,jdbcType=VARCHAR}
            </if>
            <if test="password != null and password != ''">
                and password = #{password,jdbcType=VARCHAR}
            </if>
            <if test="telephone != null and telephone != ''">
                and telephone = #{telephone,jdbcType=VARCHAR}
            </if>
            <if test="addr != null and addr != ''">
                and addr = #{addr,jdbcType=VARCHAR}
            </if>
            <if test="status != null">
                and status = #{status,jdbcType=INTEGER}
            </if>
            <if test="sex != null">
                and sex = #{sex,jdbcType=INTEGER}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday,jdbcType=TIMESTAMP}
            </if>
            <if test="isMerried != null">
                and is_merried = #{isMerried,jdbcType=INTEGER}
            </if>
            <if test="inTime != null">
                and in_time = #{inTime,jdbcType=TIMESTAMP}
            </if>
            <if test="department != null and department != ''">
                and department = #{department,jdbcType=VARCHAR}
            </if>
            <if test="leaderId != null and leaderId != ''">
                and leader_id = #{leaderId,jdbcType=VARCHAR}
            </if>
            <if test="nation != null and nation != ''">
                and nation = #{nation,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    
    <!--通过实体作为筛选条件模糊查询-->
    <select id="describeFuzzy" parameterType="com.warehouse.warehouse.pojo.po.employee.Employee" resultMap="EmployeeMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        <where>
            <if test="id != null and id != ''">
                and id like concat('%',#{id,jdbcType=VARCHAR},'%')
            </if>
            <if test="employeeName != null and employeeName != ''">
                and employee_name like concat('%',#{employeeName,jdbcType=VARCHAR},'%')
            </if>
            <if test="password != null and password != ''">
                and password like concat('%',#{password,jdbcType=VARCHAR},'%')
            </if>
            <if test="telephone != null and telephone != ''">
                and telephone like concat('%',#{telephone,jdbcType=VARCHAR},'%')
            </if>
            <if test="addr != null and addr != ''">
                and addr like concat('%',#{addr,jdbcType=VARCHAR},'%')
            </if>
            <if test="status != null">
                and status like concat('%',#{status,jdbcType=INTEGER},'%')
            </if>
            <if test="sex != null">
                and sex like concat('%',#{sex,jdbcType=INTEGER},'%')
            </if>
            <if test="birthday != null">
                and birthday like concat('%',#{birthday,jdbcType=TIMESTAMP},'%')
            </if>
            <if test="isMerried != null">
                and is_merried like concat('%',#{isMerried,jdbcType=INTEGER},'%')
            </if>
            <if test="inTime != null">
                and in_time like concat('%',#{inTime,jdbcType=TIMESTAMP},'%')
            </if>
            <if test="department != null and department != ''">
                and department like concat('%',#{department,jdbcType=VARCHAR},'%')
            </if>
            <if test="leaderId != null and leaderId != ''">
                and leader_id like concat('%',#{leaderId,jdbcType=VARCHAR},'%')
            </if>
            <if test="nation != null and nation != ''">
                and nation like concat('%',#{nation,jdbcType=VARCHAR},'%')
            </if>
            <if test="companyId != null and companyId != ''">
                and company_id = #{companyId ,jdbcType=VARCHAR}
            </if>
        </where>
        order by in_time desc
    </select>

    <!--新增所有列-->
    <insert id="insertEmployee" parameterType="com.warehouse.warehouse.pojo.po.employee.Employee">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                id,
            </if>
            <if test="employeeName != null and employeeName != ''">
                employee_name,
            </if>
            <if test="password != null and password != ''">
                password,
            </if>
            <if test="telephone != null and telephone != ''">
                telephone,
            </if>
            <if test="addr != null and addr != ''">
                addr,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="isMerried != null">
                is_merried,
            </if>
            <if test="inTime != null">
                in_time,
            </if>
            <if test="department != null and department != ''">
                department,
            </if>
            <if test="leaderId != null and leaderId != ''">
                leader_id,
            </if>
            <if test="nation != null and nation != ''">
                nation,
            </if>
            <if test="companyId != null and companyId != ''">
                company_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="employeeName != null and employeeName != ''">
                #{employeeName,jdbcType=VARCHAR},
            </if>
            <if test="password != null and password != ''">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null and telephone != ''">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="addr != null and addr != ''">
                #{addr,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="isMerried != null">
                #{isMerried,jdbcType=INTEGER},
            </if>
            <if test="inTime != null">
                #{inTime,jdbcType=TIMESTAMP},
            </if>
            <if test="department != null and department != ''">
                #{department,jdbcType=VARCHAR},
            </if>
            <if test="leaderId != null and leaderId != ''">
                #{leaderId,jdbcType=VARCHAR},
            </if>
            <if test="nation != null and nation != ''">
                #{nation,jdbcType=VARCHAR},
            </if>
            <if test="companyId != null and companyId != ''">
                #{companyId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    
    <!--批量保存-->
    <insert id="saveEmployee" parameterType="java.util.ArrayList">
        insert into employee(id, employee_name, password, telephone, addr, status, sex, birthday, is_merried, in_time, department, leader_id, nation)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=VARCHAR}, #{item.employeeName,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.telephone,jdbcType=VARCHAR}, #{item.addr,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}, #{item.sex,jdbcType=INTEGER}, #{item.birthday,jdbcType=TIMESTAMP}, #{item.isMerried,jdbcType=INTEGER}, #{item.inTime,jdbcType=TIMESTAMP}, #{item.department,jdbcType=VARCHAR}, #{item.leaderId,jdbcType=VARCHAR}, #{item.nation,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <!--通过主键修改数据-->
    <update id="updateEmployeeByPrimaryKey" parameterType="com.warehouse.warehouse.pojo.po.employee.Employee">
        update employee
        <set>
            <if test="employeeName != null and employeeName != ''">
                employee_name = #{employeeName},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="telephone != null and telephone != ''">
                telephone = #{telephone},
            </if>
            <if test="addr != null and addr != ''">
                addr = #{addr},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="isMerried != null">
                is_merried = #{isMerried},
            </if>
            <if test="inTime != null">
                in_time = #{inTime},
            </if>
            <if test="department != null and department != ''">
                department = #{department},
            </if>
            <if test="leaderId != null and leaderId != ''">
                leader_id = #{leaderId},
            </if>
            <if test="nation != null and nation != ''">
                nation = #{nation},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteEmployeeByPrimaryKey" parameterType="java.lang.String">
        delete from employee where id = #{id}
    </delete>
    
    <!--通过主键批量删除-->
    <delete id="deleteEmployeeByPrimaryKeys">
        delete from employee
        where id in
        <foreach collection="list" item="item" open="(" separator="," close=")" >
            #{item}
        </foreach>
    </delete>

</mapper>