server:
  port: 8880
#  servlet:
#    context-path: /warehouse-service
security:
  oauth2:
    client:
      client-id: client #要与oauth_client_details表中的client_id一致
      client-secret: secret #要与oauth_client_details表中的client_secret一致
      access-token-uri: http://localhost:9001/oauth/token
      user-authorization-uri: http://localhost:9001/oauth/authorize
    resource:
      token-info-uri: http://localhost:9001/oauth/check_token
spring:
  application:
    name: pt-warehouse # 应用名称
  datasource:
    url: jdbc:mysql://localhost:3306/pt-v2-c?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    #最大活跃数
    maxActive: 20
    #初始化数量
    initialSize: 1
    #最大连接等待超时时间
    maxWait: 60000
    #打开PSCache，并且指定每个连接PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    #通过connectionProperties属性来打开mergeSql功能；慢SQL记录
    #connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 1 from dual
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    #配置监控统计拦截的filters，去掉后监控界面sql将无法统计,'wall'用于防火墙
    filters: stat, wall, log4j
  redis:
    host: 47.93.124.176 # host ,默认 localhost
    port: 6379 # 端口号，默认6379
    jedis:
      pool:
        max-idle: 8  # 控制一个pool最多有多少个状态为idle(空闲的)的redis实例，默认值也是8。
        max-wait: -1 # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。
        min-idle: 0 # 控制一个pool最少有多少个状态为idle(空闲的)的redis实例，默认值为0。
        max-active: 8
    timeout: 5000 # 连接超时时间 单位 ms，默认为0
    #password:  # 密码，根据自己的 redis 设计，默认为空

  cloud:
    loadbalancer:
      retry:
        enabled: true #是否开启重试(重新连接)
eureka:
  client:
    serviceUrl: # EurekaServer地址
      defaultZone: http://localhost:9000/eureka
  instance:
    prefer-ip-address: true # 当其它服务获取地址时提供ip而不是hostname
    instance-id: ${spring.application.name}:${server.port}


management:
  #访问/actuator暴露出所有接口
  endpoints:
    web:
      exposure:
        include:  '*'
  #配合Grafana的Dashboard设置的属性
  metrics:
    tags:
      application: ${spring.application.name}

swagger:
  ui:
    title: swagger接口Api文档
    description: Wsg层暴露Api
    termsOfServiceUrl: www.baidu.com
    contact:
      name: wanpp
      url: www.baidu.com
      email: 1635679119@qq.com
    version: 1.0
mybatis:
  mapper-locations: classpath:mapper/mysql/**/*Mapper.xml
  type-aliases-package: com.warehouse.warehouse.pojo.po



